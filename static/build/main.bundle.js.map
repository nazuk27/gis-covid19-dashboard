{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./static/collectiveGraph.js","webpack:///./static/main.js"],"names":["CollectiveGraph","constructor","ajaxGet","chartData","data","main_data","console","log","machine_data","platform_names","$","document","ready","lol","multiselect","onOptionClick","element","option","thisOpt","val","onControlClose","populate_equipments_dropdown","columns","search","selectAll","texts","placeholder","platforms","populate_platform","metric_names","equipment_names","variables","get_selected_input","ChartInit","metric","graph","equipment","platform","css","metric_type","graph_type","html","row_wrapper","add_top_row_in_main_section","datasets","prepare_data_graph","platform_list","metric_types","equipment_types","optionList","checked_val","each","index","push","name","value","checked","populate_metric_dropdowns","graph_options","click","wrapper","append","toLowerCase","equipment_index","platform_index","add_new_element_to_new_row","id_key","add_new_element_to_previous_row","add_graph","equipment_data","key","replace","local_data","JSON","parse","chart_data","labels","label","d","date","Date","DATE","getDate","getMonth","getFullYear","vctx","getElementById","getContext","myChart","Chart","type","backgroundColor","borderColor","borderWidth","options","scales","yAxes","ticks","beginAtZero","selected_platform","platfrom_index","platform_value","group_option","platform_name","key_Data","m_index","m_type","metric_one_ini_flag","metric_name","collected_data","p_index","p_value","platform_data","e_index","e_value","equipment_platform","split","equipment_id","equipment_name","eq_data","dictData","initialize_metric_html","obj","add_collected_initialize","horizontal_line_html","count","flag","key_data_array","all_row_in_wrapper","find","row_to_insert_element","length","html_to_insert","row_html","key_data","annot_data","MAX_val","multiplier","d_index","d_value","Object","keys","MAX","drawTime","events","mode","scaleID","MIN","content","enabled","position","fontSize","onClick","e","alert","color","getRandomColor","fill","attach_graph_html","dataset","title","annot","max","multi","Set","display","text","Math","round","annotation","annotations","o","r","random","s"],"mappings":"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","file":"main.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./static/main.js\");\n","export class CollectiveGraph{\r\n    constructor(){\r\n        ajaxGet('/get_data', null, this.chartData);\r\n    }\r\n    chartData(data){\r\n        this.main_data = data;\r\n        console.log(data);\r\n    }\r\n}\r\n\r\n\r\n","let machine_data;\r\nlet main_data;\r\nlet platform_names;\r\nimport {CollectiveGraph} from './collectiveGraph';\r\n$(document).ready(function () {\r\n    const lol = new CollectiveGraph();\r\n    console.log(lol);\r\n        //console.log(new CollectiveGraph());\r\n       $('#langOpt').multiselect({\r\n           onOptionClick: function( element, option ){\r\n                   var thisOpt = $(option).val();\r\n           },\r\n           onControlClose: function (element) {\r\n             console.log(element);\r\n             populate_equipments_dropdown();\r\n           },\r\n            columns: 2,\r\n            search: true,\r\n           selectAll: true,\r\n           texts : {\r\n            placeholder: 'Select Platfroms',\r\n            search: 'Search Platforms'\r\n           }\r\n\r\n});\r\n       $('#equipmentopt').multiselect({\r\n            columns: 2,\r\n            search: true,\r\n            selectAll: true,\r\n            texts : {\r\n            placeholder: 'Select Equipments',\r\n            search: 'Search Equipments'\r\n           }\r\n});\r\n       $('#metricopt').multiselect({\r\n            columns: 1,\r\n            search: true,\r\n            selectAll: true,\r\n            texts : {\r\n            placeholder: 'Select Metric',\r\n            search: 'Search Metric'\r\n           }\r\n});\r\n\r\n    $('#graphopt').multiselect({\r\n            columns: 1,\r\n            texts : {\r\n            placeholder: 'Select Graph',\r\n            search: 'Search Graph'\r\n           }\r\n});\r\n    ajaxGet('/get_data', null, chartData);\r\n});\r\n\r\nconst chartData = (data) => {\r\n    platform_names = data.platforms;\r\n    main_data = data.main_data;\r\n    populate_platform(platform_names, main_data[platform_names[0]].metric_names, main_data[platform_names[0]].equipment_names)\r\n    let variables = get_selected_input()\r\n    ChartInit(variables.metric, variables.graph, variables.equipment, variables.platform);\r\n    $('#overlay').css('display', 'none');\r\n};\r\n\r\n\r\nconst ChartInit = (metric_type = 'PERFORMANCE', graph_type = 'bar', equipment, platforms) => {\r\n//adding graph dynamically.\r\n    $('.app-main__inner').html('');\r\n    let row_wrapper = $('.app-main__inner');\r\n    add_top_row_in_main_section(row_wrapper);\r\n\r\n        let datasets = prepare_data_graph(metric_type, graph_type, equipment, platforms, row_wrapper);\r\n\r\n                 //Temporary equipment\r\n//                let platform_name = platform_names[+platforms -1];\r\n//                let platform_data = main_data[platform_name];\r\n//                let equipment_id = equipment[0].split('-')[1];\r\n//                let equipment_name = platform_data.equipment_names[+equipment_id -1];\r\n//\r\n//                $.each(metric_type, (index, value) => {\r\n//                    let metric_name = platform_data.metric_names[+value - 1];\r\n//                    let hpac1_data = platform_data.dictData[equipment_name][metric_name];\r\n//                    initialize_metric_html(hpac1_data, metric_name, row_wrapper);\r\n//                 //To populate chart.js\r\n//                    add_graph(hpac1_data, metric_name, graph_type)\r\n//                    if(metric_type.length != 1 && index != metric_type.length -1){\r\n//                        let horizontal_line_html = `<div class=\"dashed\"><hr/ > <hr /></div>`;\r\n//                        row_wrapper.append(horizontal_line_html);\r\n//                    }\r\n//                    })\r\n\r\n\r\n}\r\n\r\n\r\n//to dynamically populate all the multiselect events.\r\nconst populate_platform = (platform_list, metric_types, equipment_types) => {\r\n    let optionList = [];\r\n    let checked_val = true;\r\n    $.each(platform_list, (index, data) => {\r\n        if(index === 0){\r\n            optionList.push({\r\n            name   : data,\r\n                value  : index + 1,\r\n                checked: checked_val\r\n                 })\r\n        }else{\r\n            optionList.push({\r\n            name   : data,\r\n                value  : index + 1,\r\n                checked: false\r\n                 })\r\n        }\r\n    });\r\n\r\n    $('#langOpt').multiselect('loadOptions', optionList);\r\n\r\n    ////populating equipment_list\r\n    populate_equipments_dropdown(equipment_types);\r\n\r\n    //populating Metric List\r\n    populate_metric_dropdowns(metric_types);\r\n\r\n\r\n\r\n    //Populating graph\r\n    optionList = [];\r\n    let graph_options = ['Line', 'Bar'];\r\n    $.each(graph_options, (index, data) => {\r\n        if(index === 0){\r\n            optionList.push({\r\n            name   : data,\r\n                value  : data,\r\n                checked: checked_val\r\n                })\r\n        }else{\r\n            optionList.push({\r\n            name   : data,\r\n                value  : data,\r\n                checked: false\r\n                 })\r\n        }\r\n    });\r\n    $('#graphopt').multiselect('loadOptions', optionList);\r\n\r\n\r\n}\r\n\r\n//Go button event\r\n$('#load_data').click(() => {\r\n    let variables = get_selected_input()\r\n    ChartInit(variables.metric, variables.graph, variables.equipment, variables.platform);\r\n    $('#overlay').css('display', 'none');\r\n})\r\n\r\n//Top 3 block panel in every main body\r\nconst add_top_row_in_main_section = (wrapper) => {\r\n    let html = `<div class=\"row\">\r\n                            <div class=\"col-md-6 col-xl-4\">\r\n                                <div class=\"card mb-3 widget-content bg-midnight-bloom\">\r\n                                    <div class=\"widget-content-wrapper text-white\">\r\n                                        <div class=\"widget-content-left\">\r\n                                            <div class=\"widget-heading\">Vibration</div>\r\n                                            <div class=\"widget-subheading\">Last Month avg.</div>\r\n                                        </div>\r\n                                        <div class=\"widget-content-right\">\r\n                                            <div class=\"widget-numbers text-white\"><span>57.5</span></div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-6 col-xl-4\">\r\n                                <div class=\"card mb-3 widget-content bg-arielle-smile\">\r\n                                    <div class=\"widget-content-wrapper text-white\">\r\n                                        <div class=\"widget-content-left\">\r\n                                            <div class=\"widget-heading\">Lub Oil</div>\r\n                                            <div class=\"widget-subheading\">Last Month index</div>\r\n                                        </div>\r\n                                        <div class=\"widget-content-right\">\r\n                                            <div class=\"widget-numbers text-white\"><span>Healthy</span></div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-6 col-xl-4\">\r\n                                <div class=\"card mb-3 widget-content bg-grow-early\">\r\n                                    <div class=\"widget-content-wrapper text-white\">\r\n                                        <div class=\"widget-content-left\">\r\n                                            <div class=\"widget-heading\">Performance Parameter</div>\r\n                                            <div class=\"widget-subheading\">Last Month Result</div>\r\n                                        </div>\r\n                                        <div class=\"widget-content-right\">\r\n                                            <div class=\"widget-numbers text-white\"><span>Healthy</span></div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"d-xl-none d-lg-block col-md-6 col-xl-4\">\r\n                                <div class=\"card mb-3 widget-content bg-premium-dark\">\r\n                                    <div class=\"widget-content-wrapper text-white\">\r\n                                        <div class=\"widget-content-left\">\r\n                                            <div class=\"widget-heading\">Products Sold</div>\r\n                                            <div class=\"widget-subheading\">Revenue streams</div>\r\n                                        </div>\r\n                                        <div class=\"widget-content-right\">\r\n                                            <div class=\"widget-numbers text-warning\"><span>$14M</span></div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>`;\r\n    wrapper.append(html)\r\n}\r\n\r\n\r\n// //$('.second-tab-toggle').click(function() {alert('Hello')})\r\n// $('.second-tab-toggle').click(function() {\r\n//     alert('Hello')\r\n// });\r\n//\r\n// const anchor_click = (event) => {\r\n//     console.log('Print');\r\n// }\r\n\r\n// get all selected variables from the left panel\r\nconst get_selected_input = () => {\r\n    let index = $('#metricopt').val();\r\n    let graph_type = $('#graphopt').val();\r\n    if(graph_type != null){\r\n        graph_type = graph_type[0].toLowerCase();\r\n    }else{\r\n        graph_type = 'bar'\r\n    }\r\n    let equipment_index = $('#equipmentopt').val();\r\n    let platform_index = $(\"#langOpt\").val();\r\n    return {'metric': index, 'graph': graph_type, 'equipment': equipment_index, 'platform': platform_index}\r\n}\r\n\r\n//add graph elements to new row.\r\nconst add_new_element_to_new_row = (metric_type, id_key) => {\r\n    return `<div class=\"row\"><div class=\"col-md-12 col-lg-4\">\r\n                                <div class=\"mb-3 card\">\r\n                                    <div class=\"card-header-tab card-header-tab-animation card-header\">\r\n                                        <div class=\"card-header-title\">\r\n                                            <i class=\"header-icon lnr-apartment icon-gradient bg-love-kiss\"> </i>\r\n                                            ${metric_type}\r\n                                        </div>\r\n                                        <ul class=\"nav\">\r\n                                            <li class=\"nav-item\"><a href=\"javascript:void(0);\" class=\"active nav-link\">Bar</a></li>\r\n                                            <li class=\"nav-item\"><a href=\"javascript:void(0);\" onclick=\"anchor_click(this)\" class=\"nav-link second-tab-toggle\">Line</a></li>\r\n                                        </ul>\r\n                                    </div>\r\n                                    <div class=\"card-body\">\r\n                                        <div class=\"tab-content\">\r\n                                            <div class=\"tab-pane fade show active\" id=\"tabs-eg-77\">\r\n                                                <div class=\"card mb-3 widget-chart widget-chart2 text-left w-100\">\r\n                                                    <div class=\"widget-chat-wrapper-outer\">\r\n                                                        <div class=\"widget-chart-wrapper widget-chart-wrapper-lg opacity-10 m-0\">\r\n                                                            <canvas id=\"${id_key}\"></canvas>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div></div>`\r\n}\r\n // add graph element to previous row.\r\nconst add_new_element_to_previous_row = (metric_type, id_key) => {\r\n    return `<div class=\"col-md-12 col-lg-4\">\r\n                                <div class=\"mb-3 card\">\r\n                                    <div class=\"card-header-tab card-header-tab-animation card-header\">\r\n                                        <div class=\"card-header-title\">\r\n                                            <i class=\"header-icon lnr-apartment icon-gradient bg-love-kiss\"> </i>\r\n                                            ${metric_type}\r\n                                        </div>\r\n                                        <ul class=\"nav\">\r\n                                            <li class=\"nav-item\"><a href=\"javascript:void(0);\" class=\"active nav-link\">Bar</a></li>\r\n                                            <li class=\"nav-item\"><a href=\"javascript:void(0);\" class=\"nav-link second-tab-toggle\">Line</a></li>\r\n                                        </ul>\r\n                                    </div>\r\n                                    <div class=\"card-body\">\r\n                                        <div class=\"tab-content\">\r\n                                            <div class=\"tab-pane fade show active\" id=\"tabs-eg-77\">\r\n                                                <div class=\"card mb-3 widget-chart widget-chart2 text-left w-100\">\r\n                                                    <div class=\"widget-chat-wrapper-outer\">\r\n                                                        <div class=\"widget-chart-wrapper widget-chart-wrapper-lg opacity-10 m-0\">\r\n                                                            <canvas id=\"${id_key}\"></canvas>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>`\r\n}\r\n\r\n//add graph data for all selected metrics\r\nconst add_graph = (equipment_data, metric_type, graph_type) => {\r\n        for(let key in equipment_data){\r\n        let id_key = metric_type + key.replace(/\\s/g, '');\r\n        let local_data = JSON.parse(equipment_data[key]);\r\n        let chart_data = [];\r\n        let labels = [];\r\n        let label = key;\r\n        $.each(local_data, (index, d) => {\r\n        let date = new Date(d.DATE);\r\n        date = date.getDate() + '-' + (date.getMonth()+1) + '-' + date.getFullYear();\r\n        labels.push(date);\r\n        chart_data.push(d['Recorded Values']);\r\n    });\r\n        //GRAPH\r\n        var vctx = document.getElementById(id_key).getContext(\"2d\");\r\n        var myChart = new Chart(vctx, {\r\n  type: graph_type,\r\n  data: {\r\n    labels: labels,\r\n    datasets: [{\r\n        label: label,\r\n        data: chart_data,\r\n        backgroundColor: [\r\n          \"rgba(92, 214, 214, 0.8)\",\r\n          \"rgba(54, 162, 235, 0.8)\",\r\n          \"rgba(255, 206, 86, 0.8)\",\r\n          \"rgba(75, 192, 192, 0.8)\",\r\n          \"rgba(153, 102, 255, 0.8)\",\r\n          \"rgba(255, 159, 64, 0.8)\"\r\n        ],\r\n        borderColor: [\r\n          \"rgba(92, 214, 214, 1)\",\r\n          \"rgba(54, 162, 235, 1)\",\r\n          \"rgba(255, 206, 86, 1)\",\r\n          \"rgba(75, 192, 192, 1)\",\r\n          \"rgba(153, 102, 255, 1)\",\r\n          \"rgba(255, 159, 64, 1)\"\r\n        ],\r\n        borderWidth: 1\r\n      }]\r\n  },\r\n  options: {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  }\r\n});        //LOVE\r\n    }\r\n}\r\n\r\n// Function to change the dropdown menus of equipment on the basis of selected platforms.\r\nconst populate_equipments_dropdown = (equipment_types=[]) => {\r\n    let selected_platform = $('#langOpt').val();\r\n    let optionList = [];\r\n    $.each(selected_platform, (platfrom_index, platform_value) => {\r\n        let group_option = [];\r\n        let platform_name = platform_names[+platform_value -1];\r\n        equipment_types = main_data[platform_name].equipment_names;\r\n        $.each(equipment_types, (index, data) => {\r\n        let checked_val = true;\r\n        if(platfrom_index ===0 && index  === 0){\r\n                group_option.push({\r\n            name   : data,\r\n                value  : platform_value + '-' + (index + 1),\r\n                checked: checked_val\r\n                 })\r\n            }else{\r\n                group_option.push({\r\n            name   : data,\r\n                value  : platform_value + '-' + (index + 1),\r\n                checked: false\r\n                 })\r\n            }\r\n    });\r\n        optionList.push({\r\n            label   : platform_name,\r\n            options: group_option\r\n        })\r\n    });\r\n\r\n    $('#equipmentopt').multiselect('loadOptions', optionList)\r\n}\r\n\r\n//Function to populate the dropdowns of Metric based on the Selected Platform and Equipments.\r\nconst populate_metric_dropdowns = (metric_types) => {\r\n    let optionList = [];\r\n    let checked_val = true;\r\n    $.each(metric_types, (index, data) => {\r\n        if(index === 0){\r\n            optionList.push({\r\n            name   : data,\r\n                value  : index + 1,\r\n                checked: checked_val\r\n                })\r\n        }else{\r\n                optionList.push({\r\n            name   : data,\r\n                value  : index + 1,\r\n                checked: false\r\n                })\r\n        }\r\n    });\r\n    $('#metricopt').multiselect('loadOptions', optionList)\r\n}\r\n\r\n//Prepare datasets for graph.\r\nconst prepare_data_graph = (metric_type = 'PERFORMANCE', graph_type = 'bar', equipment, platforms, row_wrapper) => {\r\n    let key_Data;\r\n    $.each(metric_type, (m_index, m_type) => {\r\n        let metric_one_ini_flag = true;\r\n        let metric_name = '';\r\n        let collected_data = [];\r\n            $.each(platforms, (p_index, p_value) => {\r\n            let platform_name = platform_names[+p_value -1];\r\n            let platform_data = main_data[platform_name];\r\n            $.each(equipment, (e_index, e_value) => {\r\n                let equipment_platform = e_value.split('-')[0];\r\n                if(equipment_platform === p_value){\r\n                    let equipment_id = e_value.split('-')[1];\r\n                    let equipment_name = platform_data.equipment_names[+equipment_id -1];\r\n                    metric_name = platform_data.metric_names[+m_type - 1];\r\n                    let eq_data = platform_data.dictData[equipment_name][metric_name];\r\n                    if(metric_one_ini_flag === true){\r\n                        key_Data = initialize_metric_html(eq_data,metric_name,row_wrapper);\r\n                        metric_one_ini_flag = false;\r\n                    }\r\n                    let key = platform_name+ '-' + equipment_name;\r\n                    let obj = {};\r\n                    obj[key] = eq_data;\r\n                    collected_data.push(obj);\r\n                }\r\n            })\r\n            });\r\n            add_collected_initialize(collected_data, metric_name, key_Data, graph_type);\r\n            let horizontal_line_html = `<div class=\"dashed\"><hr/ > <hr /></div>`;\r\n            $('.app-main__inner').append(horizontal_line_html);\r\n        });\r\n\r\n\r\n}\r\n\r\n//one time metric html initialization.\r\nconst initialize_metric_html = (local_data,metric_name, row_wrapper) => {\r\n    let count = 0;\r\n    let flag = true;\r\n    let key_data_array = [];\r\n    for (let key in local_data){\r\n        let id_key = metric_name + key.replace(/\\s/g, '');\r\n        key_data_array.push(key);\r\n        if(flag === false){\r\n        //add to previous row\r\n            let all_row_in_wrapper = $('.app-main__inner').find('.row');\r\n            let row_to_insert_element = all_row_in_wrapper[all_row_in_wrapper.length - 1];\r\n            let html_to_insert = add_new_element_to_previous_row(metric_name, id_key);\r\n            $(row_to_insert_element).append(html_to_insert);\r\n        }else{\r\n            //add to new row\r\n            let row_html = add_new_element_to_new_row(metric_name, id_key)\r\n            row_wrapper.append(row_html);\r\n            flag = false\r\n        }\r\n        count++;\r\n        if (count%3 === 0){\r\n            flag = true;\r\n        }\r\n    }\r\n    return key_data_array;\r\n}\r\n\r\n//Collected_data_graph initializations.\r\nconst add_collected_initialize = (data, metric_name, key_data, graph_type) => {\r\n\r\n    $.each(key_data, (index, key) => {\r\n        let datasets = [];\r\n        let labels = [];\r\n        let annot_data = [];\r\n        let MAX_val;\r\n        let multiplier;\r\n        $.each(data, (d_index, d_value) => {\r\n            let eq_data = d_value[Object.keys(d_value)[0]];\r\n            let key_Data = JSON.parse(eq_data[key]);\r\n            let chart_data = [];\r\n\r\n                let label = Object.keys(d_value)[0];\r\n                $.each(key_Data, (index, d) => {\r\n                    if(+d.MAX <= 3){\r\n                        multiplier = 1.3\r\n                    }else{\r\n                        multiplier = 1.2\r\n                    }\r\n                    MAX_val = d.MAX;\r\n                let date = new Date(d.DATE);\r\n                date = date.getDate() + '-' + (date.getMonth()+1) + '-' + date.getFullYear();\r\n                labels.push(date);\r\n                chart_data.push(d['Recorded Values']);\r\n                annot_data.push({\r\n                            drawTime: 'afterDraw', // overrides annotation.drawTime if set\r\n                            type: 'line',\r\n                            events: ['click'],\r\n                            mode: 'horizontal',\r\n                            scaleID: 'y-axis-0',\r\n                            value: d.MIN,\r\n                            borderColor: 'red',\r\n                            borderWidth: 1,\r\n                            label: {\r\n                                      backgroundColor: \"rgb(200,0,0)\",\r\n                                      content: \"MIN\",\r\n                                      enabled: true,\r\n                                      position: 'left',\r\n                                      fontSize: 8,\r\n\r\n                                    },\r\n                            onClick: function(e) {\r\n                                console.log(e);\r\n                                alert('Hello');\r\n                            }\r\n                });\r\n                annot_data.push({\r\n                            drawTime: 'afterDraw', // overrides annotation.drawTime if set\r\n                            type: 'line',\r\n                            events: ['click'],\r\n                            mode: 'horizontal',\r\n                            scaleID: 'y-axis-0',\r\n                            value: d.MAX,\r\n                            borderColor: 'green',\r\n                            borderWidth: 1,\r\n                            label: {\r\n                                      backgroundColor: \"rgb(0,200,0)\",\r\n                                      content: \"MAX\",\r\n                                      enabled: true,\r\n                                      position: 'left',\r\n                                      fontSize: 8,\r\n\r\n                                    },\r\n                            onClick: function(e) {\r\n                                console.log(e);\r\n                                alert('Hello');\r\n                            }\r\n                });\r\n                });\r\n                let color = getRandomColor();\r\n                datasets.push({label: label, data: chart_data, backgroundColor:color, fill: false, borderColor:color});\r\n\r\n        })\r\n        let id_key = metric_name + key.replace(/\\s/g, '');\r\n        attach_graph_html(id_key, labels, datasets, key, graph_type, annot_data, MAX_val, multiplier);\r\n\r\n    });\r\n}\r\n\r\n// add_only graph.\r\nconst attach_graph_html = (id_key, labels, dataset, title, graph_type='line', annot = [], max, multi) => {\r\n            //GRAPH\r\n        labels = [...new Set(labels)];\r\n        var vctx = document.getElementById(id_key).getContext(\"2d\");\r\n        var myChart = new Chart(vctx, {\r\n          type: graph_type,\r\n          data: {\r\n            labels: labels,\r\n            datasets: dataset\r\n          },\r\n          options: {\r\n              fill: false,\r\n              title: {\r\n                  display: true,\r\n                  text: title\r\n              },\r\n            scales: {\r\n              yAxes: [\r\n                {\r\n                  ticks: {\r\n                    beginAtZero: true,\r\n                      max: Math.round(multi*(+max))\r\n                  }\r\n                }\r\n              ]\r\n            },\r\n\t\tannotation: {\r\n\t\t\tannotations: annot\r\n\t\t}\r\n\r\n          }\r\n        });\r\n};\r\n\r\nconst getRandomColor = () => {\r\n    let o = Math.round, r = Math.random, s = 255;\r\n    return 'rgba(' + o(r()*s) + ',' + o(r()*s) + ',' + o(r()*s) + ',' + 0.6 + ')';\r\n}\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}